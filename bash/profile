
export PATH="$PATH:$HOME/.rvm/bin" # Add RVM to PATH for scripting
export THEOS=/opt/theos
export EDITOR=~/Applications/Emacs.app/Contents/MacOS/Emacs
export SCALA_HOME=/usr/local/opt/scala/libexec

[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*

## 增加一些保护 ##
alias rm='rm -i'
alias cp='cp -i'
alias mv='mv -i'

## 默认命令参数 ##
alias vi='vim'
alias grep='grep --color=auto'
alias egrep='egrep --color=auto'
alias fgrep='fgrep --color=auto'
alias bc='bc -l'
alias wget='wget -c'
alias chown='chown --preserve-root'
alias chmod='chmod --preserve-root'
alias chgrp='chgrp --preserve-root'
alias ln='ln -i'
alias gitup='git-up'

alias -s gz='tar -xzvf'
alias -s tgz='tar -xzvf'
alias -s zip='unzip'
alias -s bz2='tar -xjvf'
alias -s php=mate
alias -s py=mate
alias -s rb=mate
alias -s html=mate
alias gcid="git log | head -1 | awk '{print substr(\$2,1,7)}' | pbcopy"

alias fuck='eval $(thefuck $(fc -ln -1 | tail -n 1)); fc -R'
# 彩色的grep输出
alias grep='grep --color=auto'
export GREP_COLOR='1;33'
 
# 彩色的ls
export LSCOLORS='Gxfxcxdxdxegedabagacad'
# Gnu/linux的ls
ls='ls --color=auto'
 
# BSD/os x的ls命令
# alias ls='ls -G'
 
# 在屏幕上显示10个最近的历史命令
function ht {
history | awk '{a[$2]++}END{for(i in a){print a[i] " " i}}' | sort -rn | head
}

# host和ping命令的替代
# 接受http:// 或 https:// 或 ftps:// 名称用作域或主机名
_getdomainnameonly(){
	local h="$1"
	local f="${h,,}"
	# remove protocol part of hostname
	f="${f#http://}"
	f="${f#https://}"
	f="${f#ftp://}"
	f="${f#scp://}"
	f="${f#scp://}"
	f="${f#sftp://}"
	# remove username and/or username:password part of hostname
	f="${f#*:*@}"
	f="${f#*@}"a
	# remove all /foo/xyz.html*
	f=${f%%/*}
	# show domain name only
	echo "$f"
}

# 在后台任务结束时立刻通知
set -o notify
 
# 禁用[CTRL-D]来结束shell
set -o ignoreeof

#Productivity
alias remote="ssh 10.34.160.58"
alias bup="brew update && brew upgrade && brew cleanup && brew doctor"
alias gup="gem update --system && gem update && gem cleanup"
alias up="bup && gup"

alias sst='svn status -u'

alias g='git'
alias lsnew=" ls -al --time-style=+%D | grep `date +%D` "
alias cd..="cd .."
alias ls='ls -p'
alias ll="ls -l"

alias ..='cd ..'
alias ...='cd ../../../'
alias ....='cd ../../../../'
alias .....='cd ../../../../'
alias .4='cd ../../../../'
alias .5='cd ../../../../..'
alias bc='bc -l'
alias cd..='cd ..'
alias chgrp='chgrp --preserve-root'
alias chmod='chmod --preserve-root'
alias chown='chown --preserve-root'
alias cp='cp -i'
alias dnstop='dnstop -l 5 eth1'
alias egrep='egrep --color=auto'
alias ethtool='ethtool eth1'

alias c='clear'
alias down='sudo /sbin/shutdown -h now'

function gi() { curl http://www.gitignore.io/api/$@ ;}

alias c="clear"
alias histg="history | grep"
alias ..='cd ..'
alias ...='cd ../..'
mcd() { mkdir -p "$1"; cd "$1";}
cls() { cd "$1"; ls;}
backup() { cp "$1"{,.bak};}
md5check() { md5 "$1" | grep "$2";}
extract() {
    if [ -f $1 ] ; then
      case $1 in
        *.tar.bz2)   tar xjf $1     ;;
        *.tar.gz)    tar xzf $1     ;;
        *.bz2)       bunzip2 $1     ;;
        *.rar)       unrar e $1     ;;
        *.gz)        gunzip $1      ;;
        *.tar)       tar xf $1      ;;
        *.tbz2)      tar xjf $1     ;;
        *.tgz)       tar xzf $1     ;;
        *.zip)       unzip $1       ;;
        *.Z)         uncompress $1  ;;
        *.7z)        7z x $1        ;;
        *)     echo "'$1' cannot be extracted via extract()" ;;
         esac
     else
         echo "'$1' is not a valid file"
     fi
}

# Network
alias listen="lsof -P -i -n"
getlocation() { lynx -dump http://www.ip-adress.com/ip_tracer/?QRY=$1|grep address|egrep 'city|state|country'|awk '{print $3,$4,$5,$6,$7,$8}'|sed 's\ip address flag \\'|sed 's\My\\';}

# Funny
alias busy="cat /dev/urandom | hexdump -C | grep 'ca fe'"
